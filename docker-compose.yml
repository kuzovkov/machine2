version: '3.7'

services:
  node:
    build:
      context: ./node
      dockerfile: Dockerfile
    volumes:
      - ./node/app:/usr/src/env/app
      - ./node/data:/data
    dns: 8.8.8.8
    ports:
      - "80:80"
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: courses
      DB_PASS: Admin123456

  webdrv:
    privileged: true
    build:
      context: ./webdrv
      dockerfile: Dockerfile
    volumes:
      - ./webdrv/app:/usr/src/app
      - ./webdrv/data:/data
      - /dev/shm:/dev/shm
    dns: 8.8.8.8
    ports:
      - "5900:5900"
      - "6001:6001"
    user: apps

  db:
    image: postgres:12.1
    environment:
      POSTGRES_PASSWORD: Admin123456
      POSTGRES_USER: postgres
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./db/dumps:/dumps
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./db/pg_ident.conf:/etc/postgresql/pg_ident.conf
      - db-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - redis-data:/data
    expose:
      - 6379
    environment:
      REDIS_PASSWORD: kpaHqGrSvJf5TLCU

volumes:
  db-data: {}
  redis-data: {}
